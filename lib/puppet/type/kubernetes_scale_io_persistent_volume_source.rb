
# This file is automatically generated by puppet-swagger-generator and
# any manual changes are likely to be clobbered when the files
# are regenerated.

require_relative '../../puppet_x/puppetlabs/swagger/fuzzy_compare'

Puppet::Type.newtype(:kubernetes_scale_io_persistent_volume_source) do
  
  @doc = "ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume"
  

  ensurable

  
  validate do
    required_properties = [
    
      :gateway,
    
      :system,
    
      :secret_ref,
    
    ]
    required_properties.each do |property|
      # We check for both places so as to cover the puppet resource path as well
      if self[property].nil? and self.provider.send(property) == :absent
        fail "You must provide a #{property}"
      end
    end
  end
  

  newparam(:name, namevar: true) do
    desc 'Name of the scale_io_persistent_volume_source.'
  end
  
    
      
      newproperty(:gateway) do
      
        
        desc "The host address of the ScaleIO API Gateway."
        
        def insync?(is)
          PuppetX::Puppetlabs::Swagger::Utils::fuzzy_compare(is, should)
        end
      end
    
  
    
      
      newproperty(:system) do
      
        
        desc "The name of the storage system as configured in ScaleIO."
        
        def insync?(is)
          PuppetX::Puppetlabs::Swagger::Utils::fuzzy_compare(is, should)
        end
      end
    
  
    
      
      newproperty(:secret_ref) do
      
        
        desc "SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail."
        
        def insync?(is)
          PuppetX::Puppetlabs::Swagger::Utils::fuzzy_compare(is, should)
        end
      end
    
  
    
      
      newproperty(:ssl_enabled) do
      
        
        desc "Flag to enable/disable SSL communication with Gateway, default false"
        
        def insync?(is)
          PuppetX::Puppetlabs::Swagger::Utils::fuzzy_compare(is, should)
        end
      end
    
  
    
      
      newproperty(:protection_domain) do
      
        
        desc "The name of the ScaleIO Protection Domain for the configured storage."
        
        def insync?(is)
          PuppetX::Puppetlabs::Swagger::Utils::fuzzy_compare(is, should)
        end
      end
    
  
    
      
      newproperty(:storage_pool) do
      
        
        desc "The ScaleIO Storage Pool associated with the protection domain."
        
        def insync?(is)
          PuppetX::Puppetlabs::Swagger::Utils::fuzzy_compare(is, should)
        end
      end
    
  
    
      
      newproperty(:storage_mode) do
      
        
        desc "Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned."
        
        def insync?(is)
          PuppetX::Puppetlabs::Swagger::Utils::fuzzy_compare(is, should)
        end
      end
    
  
    
      
      newproperty(:volume_name) do
      
        
        desc "The name of a volume already created in the ScaleIO system that is associated with this volume source."
        
        def insync?(is)
          PuppetX::Puppetlabs::Swagger::Utils::fuzzy_compare(is, should)
        end
      end
    
  
    
      
      newproperty(:fs_type) do
      
        
        desc "Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. 'ext4', 'xfs', 'ntfs'. Implicitly inferred to be 'ext4' if unspecified."
        
        def insync?(is)
          PuppetX::Puppetlabs::Swagger::Utils::fuzzy_compare(is, should)
        end
      end
    
  
    
      
      newproperty(:read_only) do
      
        
        desc "Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts."
        
        def insync?(is)
          PuppetX::Puppetlabs::Swagger::Utils::fuzzy_compare(is, should)
        end
      end
    
  
end
