
# This file is automatically generated by puppet-swagger-generator and
# any manual changes are likely to be clobbered when the files
# are regenerated.

require_relative '../../../puppet_x/puppetlabs/kubernetes/provider'

Puppet::Type.type(:kubernetes_toleration).provide(:swagger, :parent => PuppetX::Puppetlabs::Kubernetes::Provider) do

  mk_resource_methods

  def self.instance_to_hash(instance)
    {
    ensure: :present,
    name: instance.metadata.name,
    
      
        
        key: instance.key.respond_to?(:to_hash) ? instance.key.to_hash : instance.key,
        
      
    
      
        
        operator: instance.operator.respond_to?(:to_hash) ? instance.operator.to_hash : instance.operator,
        
      
    
      
        
        value: instance.value.respond_to?(:to_hash) ? instance.value.to_hash : instance.value,
        
      
    
      
        
        effect: instance.effect.respond_to?(:to_hash) ? instance.effect.to_hash : instance.effect,
        
      
    
      
        
        toleration_seconds: instance.tolerationSeconds.respond_to?(:to_hash) ? instance.tolerationSeconds.to_hash : instance.tolerationSeconds,
        
      
    
    object: instance,
    }
  end

  def create
    Puppet.info("Creating kubernetes_toleration #{name}")
    create_instance_of('toleration', name, build_params)
  end

  def flush
   unless @property_hash.empty?
     unless resource[:ensure] == :absent
        flush_instance_of('toleration', name, @property_hash[:object], build_params)
      end
    end
  end

  def destroy
    Puppet.info("Deleting kubernetes_toleration #{name}")
    destroy_instance_of('toleration', name)
    @property_hash[:ensure] = :absent
  end

  private
  def self.list_instances
    list_instances_of('toleration')
  end

  def build_params
    params = {
    
      
        key: resource[:key],
      
    
      
        operator: resource[:operator],
      
    
      
        value: resource[:value],
      
    
      
        effect: resource[:effect],
      
    
      
        tolerationSeconds: resource[:toleration_seconds],
      
    
    }
    params.delete_if { |key, value| value.nil? }
    params
  end
end
